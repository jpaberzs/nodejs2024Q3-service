// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int
  createdAt Int 
  updatedAt Int 
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artistId String?
  albumId  String?
  duration Int

  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: Cascade)
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: Cascade)

  Favorite Favorite[]
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean

  tracks Track[]
  albums Album[]

  Favorite Favorite[]
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  artistId String?

  artist  Artist? @relation(fields: [artistId], references: [id], onDelete: Cascade)
  tracks  Track[]

  Favorite Favorite[]
}

model Favorite {
  id      String @id @default(uuid())

  artistId String? 
  albumId String? 
  trackId String?

  artists Artist? @relation(fields: [artistId], references: [id])
  albums  Album? @relation(fields: [albumId], references: [id])
  tracks  Track? @relation(fields: [trackId], references: [id])
}