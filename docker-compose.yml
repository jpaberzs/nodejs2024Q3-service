version: '3.9'
services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: my_database
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-app
    restart: always
    ports:
      - '4000:4000'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - my_network
  web:
    build: .
    command: npm start
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
    networks:
      - my_network

volumes:
  postgres-data:

networks:
  my_network:
    driver: bridge
